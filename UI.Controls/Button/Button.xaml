<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:UI.Controls">
    
    <Style x:Key="StandardButtonStyle" TargetType="{x:Type local:Button}">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="FontSize" Value="11.5" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Button}">
                    <Border x:Name="RootElement" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <Grid>                            
                            <Rectangle x:Name="BackgroundOverlay" Fill="Transparent" Margin="0" StrokeThickness="0" />
                            <ContentPresenter x:Name="ButtonContentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Image x:Name="ButtonImage" Source="{TemplateBinding ImageSource}" Margin="{TemplateBinding ImageMargin}" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="False" Opacity="0" Visibility="Collapsed" RadiusY="0" RadiusX="0"/> 
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" />
                                        <ColorAnimation Duration="{DynamicResource DefaultTransitionsDuration}" To="Transparent" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundOverlay" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation To="0.85" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" />
                                        <DoubleAnimation To="1.01" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" />
                                        <DoubleAnimation To="1.01" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation To="0.97" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" />
                                        <DoubleAnimation To="0.97" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To=".50" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement" >
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1.0" ScaleY="1.0" />
                        </Border.RenderTransform>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsRecommended" Value="True">
                <Setter Property="Background" Value="#FFE600" />
                <Setter Property="Foreground" Value="#504E40" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolbarButtonStyle" TargetType="{x:Type local:Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="MinWidth" Value="65"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Button}">
                    <Border x:Name="RootElement" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlBorderCornerRadius}">
                        <Grid>
                            <Rectangle x:Name="BackgroundOverlay" Fill="Transparent" Margin="0" StrokeThickness="0" />
                            <ContentPresenter x:Name="ButtonContentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Image x:Name="ButtonImage" Source="{TemplateBinding ImageSource}" Margin="{TemplateBinding ImageMargin}" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="False" Opacity="0" Visibility="Collapsed" RadiusY="0" RadiusX="0" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation To="{DynamicResource ControlBorderBrushOpacity}" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" />
                                        <ColorAnimation Duration="{DynamicResource DefaultTransitionsDuration}" To="Transparent" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundOverlay" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" />
                                        <ColorAnimation Duration="{DynamicResource DefaultTransitionsDuration}" To="{DynamicResource ButtonHotBackgroundColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundOverlay" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{DynamicResource ButtonPressedBackgroundColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundOverlay" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To=".50" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement" >
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
