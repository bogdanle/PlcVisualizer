<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:system="clr-namespace:System;assembly=mscorlib" 
  xmlns:local="clr-namespace:UI.Controls"
  xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
  xmlns:converters="clr-namespace:UI.Controls.Converters">

  <converters:TitleCaseConverter x:Key="TitleCaseConverter" />

    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="True" Stroke="{DynamicResource DefaultFocusVisualBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalTabItemStyle" TargetType="{x:Type local:TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Padding" Value="6,4,6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TabItem}">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation BeginTime="0:0:0" Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="{DynamicResource HorizontalTabItemHotTextColor}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation BeginTime="0:0:0" Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="{DynamicResource AccentColor}" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.FontWeight)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontWeight>SemiBold</FontWeight>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Bd" Margin="2,0,2,0" BorderThickness="0" CornerRadius="0" Background="{DynamicResource HorizontalTabItemNormalBackgroundBrush}" Padding="{TemplateBinding Padding}">
                            <!--<ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                            <TextBlock x:Name="Content" FontFamily="{DynamicResource HorizontalTabItemFontFamily}" FontSize="{DynamicResource HorizontalTabItemFontSize}" Foreground="{DynamicResource HorizontalTabItemNormalTextBrush}" Text="{TemplateBinding Header, Converter={StaticResource TitleCaseConverter}}" HorizontalAlignment="Left" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Typography.Capitals="SmallCaps" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                        <Line Y2="1" Margin="0,4,0,4" HorizontalAlignment="Right" Stretch="Fill" VerticalAlignment="Stretch" Stroke="{DynamicResource VerticalTabItemSeparatorBrush}" StrokeThickness="1" x:Name="Separator" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="VerticalTabItemStyle" TargetType="{x:Type local:TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Padding" Value="6,4,6,4"/>
        <Setter Property="Background" Value="{DynamicResource VerticalTabItemNormalBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TabItem}">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <!--<Storyboard>
                                        <ColorAnimation BeginTime="0:0:0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"  To="{DynamicResource VerticalTabItemHotBackgroundColor}" Duration="0:0:0.3" />
                                    </Storyboard>-->
                                </VisualState>
                                <!--<VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"  To="{DynamicResource VerticalTabItemSelectedBackgroundColor}" />
                                        <ColorAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"  To="{DynamicResource VerticalTabItemSelectedTextColor}" />
                                    </Storyboard>
                                </VisualState>-->
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Bd" Margin="0,1,0,1" BorderThickness="0" CornerRadius="0" Background="{DynamicResource VerticalTabItemNormalBackgroundBrush}" Padding="{TemplateBinding Padding}">
                            <TextBlock x:Name="Content" FontSize="{DynamicResource VerticalTabItemFontSize}" Foreground="{DynamicResource VerticalTabItemNormalTextBrush}" Text="{TemplateBinding Header}" 
                                       HorizontalAlignment="Left" TextWrapping="Wrap" MaxWidth="250" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource VerticalTabItemSelectedBackgroundBrush}"/>
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource VerticalTabItemSelectedTextBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource VerticalTabItemSelectedBackgroundBrush}"/>
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource VerticalTabItemSelectedTextBrush}"/> 
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Special case for MVVM TabControl -->
    <Style x:Key="MvvmVerticalTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Header" Value="{Binding ViewTitle}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Padding" Value="6,4,6,4"/>
        <Setter Property="Background" Value="{DynamicResource VerticalTabItemNormalBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation BeginTime="0:0:0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"  To="{DynamicResource VerticalTabItemHotBackgroundColor}" Duration="0:0:0.3" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"  To="{DynamicResource VerticalTabItemSelectedBackgroundColor}" />
                                        <ColorAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"  To="{DynamicResource VerticalTabItemSelectedTextColor}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Bd" Margin="0,1,0,1" BorderThickness="0" CornerRadius="0" Background="{DynamicResource VerticalTabItemNormalBackgroundBrush}" Padding="{TemplateBinding Padding}">
                            <TextBlock x:Name="Content" FontSize="{DynamicResource VerticalTabItemFontSize}" Foreground="{DynamicResource VerticalTabItemNormalTextBrush}" Text="{TemplateBinding Header}" HorizontalAlignment="Left" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       TextWrapping="Wrap" MaxWidth="250" 
                                       VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
    