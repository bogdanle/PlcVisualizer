<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:UI.Controls">
    
    <ControlTemplate x:Key="ValidationToolTipTemplate2">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
            <Border Background="{DynamicResource ValidationToolTipBackgroundBrush}" CornerRadius="{DynamicResource ControlBorderCornerRadius}"/>
            <Border CornerRadius="2">
                <TextBlock Foreground="{DynamicResource ValidationToolTipForegroundBrush}" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="False"/>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="MySearchTextBoxStyle" TargetType="{x:Type local:SearchTextBox}">
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForegroundBrush}" />
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="WatermarkText" Value="Quick search" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="WatermarkForeground" Value="{DynamicResource WatermarkForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelectionBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SearchTextBox}">
                    <Grid x:Name="RootElement">
                        <Grid.Effect>
                            <DropShadowEffect BlurRadius="5" ShadowDepth="0" Direction="0" Opacity="0" Color="{DynamicResource FocusGlowColor}" />
                        </Grid.Effect>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation To="{DynamicResource ControlBorderBrushOpacity}" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" />    
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                    </Storyboard>
                                </VisualState>                                
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="{DynamicResource DefaultTransitionsDuration}" To="{DynamicResource FocusGlowColorOpacity}" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="RootElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="{DynamicResource DefaultTransitionsDuration}" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="RootElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlBorderCornerRadius}">
                            <Grid x:Name="LayoutGrid">
	                            <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>

                                <ScrollViewer Margin="2" x:Name="PART_ContentHost" Grid.Column="0" BorderThickness="0" IsTabStop="False" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" />
                                <Label Grid.Column="0" x:Name="WatermarkLabel" Cursor="IBeam" Margin="2" VerticalAlignment="Center" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WatermarkForeground}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WatermarkText}" Padding="2,0,0,0" FontStyle="Italic" />
                                <Border x:Name="PART_SearchIconBorder" Grid.Column="1" BorderThickness="0" Margin="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{DynamicResource SearchIconNormalBorderBrush}" Background="{DynamicResource SearchIconNormalBackgroundBrush}">
                                    <Grid>
                                        <Image x:Name="SearchIcon" Stretch="None" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center" Source="/UI.Controls;component/Themes/Images/searchGlyph.png" />
                                        <Rectangle x:Name="SearchIconOverlay" Fill="White" Opacity="0.25" />
                                    </Grid>
                                </Border>
                                <Border Grid.ColumnSpan="2" x:Name="DisabledVisualElement" BorderBrush="{DynamicResource DisabledElementBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource DisabledElementBrush}" IsHitTestVisible="False" Opacity="0"/>
                            </Grid>
                        </Border>
                        <Border Grid.Column="0" Grid.ColumnSpan="2" x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate2}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <system:Boolean>true</system:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>                        
                        <Trigger Property="HasText" Value="True">
                            <Setter Property="Visibility" TargetName="WatermarkLabel" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="WatermarkLabel" Value="Hidden" />                            
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasText" Value="True" />
                                <Condition Property="SearchMode" Value="Instant" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Source" TargetName="SearchIcon"  Value="/UI.Controls;component/Themes/Images/clear.png" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_SearchIconBorder" Value="True" />
                                <Condition Property="HasText" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--<MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="{DynamicResource DefaultTransitionDuration}" To="{DynamicResource SearchIconHotBackgroundColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_SearchIconBorder" />
                                    </Storyboard>
                                </BeginStoryboard>                                
                            </MultiTrigger.EnterActions>-->
                            <Setter Property="BorderBrush" TargetName="PART_SearchIconBorder" Value="{DynamicResource SearchIconHotBorderBrush}" />
                            <Setter Property="Background" TargetName="PART_SearchIconBorder" Value="{DynamicResource SearchIconHotBackgroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_SearchIconBorder" Value="True" />
                                <Condition Property="IsMouseLeftButtonDown" Value="True" />
                                <Condition Property="HasText" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="SearchIconOverlay" Value="0"/>
                            <Setter Property="Padding" TargetName="PART_SearchIconBorder" Value="2,0,0,0" />
                            <Setter Property="BorderBrush" TargetName="PART_SearchIconBorder" Value="{DynamicResource SearchIconHotBorderBrush}" />
                            <Setter Property="Background" TargetName="PART_SearchIconBorder" Value="{DynamicResource SearchIconHotBackgroundBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
