<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:local="clr-namespace:UI.Controls">

    <Color x:Key="BusyIndicatorForegroundColor">White</Color>
    <Color x:Key="BusyIndicatorBackgroundColor">#8B72A6C6</Color>
    <Color x:Key="BusyIndicatorOverlayColor">White</Color>
    <SolidColorBrush x:Key="BusyIndicatorForegroundBrush" Color="{StaticResource BusyIndicatorForegroundColor}" />
    <SolidColorBrush x:Key="BusyIndicatorBackgroundBrush" Color="{DynamicResource DefaultBackgroundColor}" Opacity="0.6" />
    <SolidColorBrush x:Key="BusyIndicatorOverlayBrush" Color="{StaticResource BusyIndicatorOverlayColor}" />
    <LinearGradientBrush x:Key="BusyIndicatorEllipseBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource DefaultBackgroundColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource AccentColor}" Offset="0.7"/>
    </LinearGradientBrush>

    <Style TargetType="{x:Type local:BusyIndicator}">
        <Setter Property="Foreground" Value="{DynamicResource DefaultForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="BusyContent" Value="Working..." />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="{DynamicResource BusyIndicatorOverlayBrush}" />
                    <Setter Property="Opacity" Value="0.5" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="00:00:00.1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BusyIndicator}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="BusyContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="BusyContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Rectangle x:Name="Overlay" Style="{TemplateBinding OverlayStyle}" />
                        <ContentPresenter x:Name="BusyContent">
                            <ContentPresenter.Content>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" MinHeight="80" MinWidth="200" Margin="0">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}" CornerRadius="0" >
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="5" Color="Silver" ShadowDepth="1"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <local:WaitAnimation Grid.Column="0" Margin="10" VerticalAlignment="Center">
                                                <local:WaitAnimation.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.65" ScaleY="0.65"/>
                                                </local:WaitAnimation.LayoutTransform>
                                            </local:WaitAnimation>
                                            <Grid Grid.Column="1">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>                                                
                                                <Label VerticalAlignment="Center" Content="{TemplateBinding BusyContent}" Margin="10,5,10,0" VerticalContentAlignment="Center" Foreground="{TemplateBinding Foreground}" />                                                <Grid Grid.Row="1" Margin="5,5,10,15" Visibility="{TemplateBinding ProgressBarVisibility}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ProgressBar x:Name="ProgressBar" Minimum="0" Maximum="100" Height="17" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Value="{TemplateBinding ProgressBarValue}" />
                                                    <Label Grid.Column="1" Margin="0,0,0,0" Width="35" Content="{TemplateBinding PercentCompleteString}" HorizontalContentAlignment="Right" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" />
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
