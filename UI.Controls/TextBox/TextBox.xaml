<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib" 
    xmlns:local="clr-namespace:UI.Controls">

    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Margin="0" CornerRadius="0" Background="{DynamicResource ScrollBarBackgroundBrush}" BorderThickness="0">
                        <Path Name="Arrow"  HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ScrollBarGlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" >
                            <Path.LayoutTransform>
                                <ScaleTransform ScaleX="0.85" ScaleY="0.85"/>    
                            </Path.LayoutTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ScrollBarHoverGlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ScrollBarPressedGlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ScrollBarDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ValidationToolTipTemplate2">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <system:Boolean>True</system:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
            <Border Background="{DynamicResource ValidationToolTipBackgroundBrush}" CornerRadius="{DynamicResource ControlBorderCornerRadius}"/>
            <Border CornerRadius="2">
                <TextBlock Foreground="{DynamicResource ValidationToolTipForegroundBrush}" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="False"/>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="MyTextBoxStyle" TargetType="{x:Type local:TextBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForegroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="WatermarkForeground" Value="{DynamicResource WatermarkForegroundBrush}" />
        <Setter Property="ReadOnlyForeground" Value="Gray"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelectionBrush}" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Border BorderBrush="{DynamicResource ValidationElementBorderBrush}" BorderThickness="1" CornerRadius="1" >
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" ShadowDepth="0" Direction="0" Opacity="0.7" Color="{DynamicResource ValidationElementBorderColor}" />
                            </Border.Effect>

                            <Grid>                                                                        
                                <AdornedElementPlaceholder x:Name="adorner" Margin="-1"/>
                            </Grid>
                        </Border>                                                                     
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TextBox">
                    <Grid x:Name="RootElement">
                        <Grid.Effect>
                            <DropShadowEffect BlurRadius="5" ShadowDepth="0" Direction="0" Opacity="0" Color="{DynamicResource FocusGlowColor}" />
                        </Grid.Effect>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation To="{DynamicResource ControlBorderBrushOpacity}" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="{DynamicResource DefaultTransitionsDuration}" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="{DynamicResource DefaultTransitionsDuration}" To="{DynamicResource FocusGlowColorOpacity}" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="RootElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="{DynamicResource DefaultTransitionsDuration}" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="RootElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReadOnlyStates">
                                <VisualState x:Name="ShowReadOnly">
                                    <Storyboard>                                        
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ValidationErrorElement"/>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>                                
                                <VisualState x:Name="HideReadOnly">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CurrencySignStates">
                                <VisualState x:Name="ShowCurrencySign">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CurrencySign">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideCurrencySign">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CurrencySign">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Grid.ColumnSpan="2" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{DynamicResource ControlBorderCornerRadius}" Opacity="1">
                            <Grid x:Name="LayoutGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0" Visibility="{TemplateBinding RequiredIndicatorVisibility}" ToolTip="This field is required">
                                    <Rectangle x:Name="MandatoryIndicator" Stroke="OrangeRed" StrokeThickness="0,0,1,1" Fill="Orange" Opacity="0.3" />
                                    <TextBlock Text="*" FontFamily="Arial" FontSize="14" VerticalAlignment="Top" Margin="2,2,2,2"/>
                                </Grid>
                                <Grid Grid.Column="0" Visibility="{TemplateBinding UniqueIndicatorVisibility}" ToolTip="This field is required and the value has to be unique">
                                    <Rectangle x:Name="UniqueIndicator" Stroke="SteelBlue" StrokeThickness="0,0,1,1" Fill="LightSteelBlue" Opacity="0.3" />
                                    <TextBlock Text="*" FontFamily="Arial" FontSize="14" VerticalAlignment="Top" Margin="2,2,2,2"/>
                                </Grid>

                                <TextBlock Grid.Column="1" Text="£" Margin="2,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="CurrencySign" Visibility="Collapsed" />
                                <ScrollViewer Grid.Column="2" x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Margin="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}" />
                                <Label Grid.Column="2" x:Name="WatermarkLabel" Cursor="IBeam" Margin="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WatermarkForeground}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WatermarkText}" Padding="2,0,0,0" FontStyle="Italic" />
                                <Border x:Name="PART_IconBorder" Grid.Column="3" BorderThickness="0" Margin="1" Cursor="Hand" Visibility="{TemplateBinding IconVisibility}" Width="20" HorizontalAlignment="Right" BorderBrush="{DynamicResource TextBoxIconNormalBorderBrush}" Background="{DynamicResource TextBoxIconNormalBackgroundBrush}" >
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="IconBorderTransform"/>
                                    </Border.RenderTransform>
                                    <Grid>
                                        <Image x:Name="Icon" Stretch="Uniform" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding Icon}" />
                                        <Rectangle x:Name="IconOverlay" Fill="White" Opacity="0.2" AutomationProperties.Name="{TemplateBinding IconName}" />
                                    </Grid>
                                </Border>
                                <Grid Grid.Column="4" Visibility="{TemplateBinding UpDownButtonVisibility}" Width="15">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="1*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.RowSpan="3" CornerRadius="0" Background="{DynamicResource ScrollBarThumbBackgroundBrush}" Opacity="0.7" />
                                    <RepeatButton Grid.Row="0" Style="{StaticResource RepeatButtonStyle}" Command="local:TextBox.UpDownButtonUpCommand" Height="10" Content="M 0 4 L 8 4 L 4 0 Z" />
                                    <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true" Cursor="SizeNS"/>
                                    <RepeatButton Grid.Row="2" Style="{StaticResource RepeatButtonStyle}" Command="local:TextBox.UpDownButtonDownCommand" Height="10" Content="M 0 0 L 4 4 L 8 0 Z" />
                                </Grid>
                            </Grid>
                        </Border>
                        <Border Grid.Column="0" Grid.ColumnSpan="2"  x:Name="DisabledVisualElement" BorderBrush="{DynamicResource DisabledElementBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource DisabledElementBrush}" IsHitTestVisible="False" Visibility="Collapsed" />
                        <Border Grid.Column="0" Grid.ColumnSpan="2" x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="{DynamicResource ControlBorderCornerRadius}" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Left" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate2}">
                                    <!--<ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <system:Boolean>true</system:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>-->
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="AcceptsReturn" Value="True" >
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Trigger>
                        <Trigger Property="HasText" Value="True">
                            <Setter Property="Visibility" TargetName="WatermarkLabel" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="WatermarkLabel" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
</ResourceDictionary>
