<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:local="clr-namespace:UI.Controls"        
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:utils="clr-namespace:UI.Controls"
    xmlns:converters="clr-namespace:UI.Controls.Converters">

    <converters:TitleCaseConverter x:Key="TitleCaseConverter" />
    <converters:ToUppercaseConverter x:Key="ToUppercaseConverter" />
    <system:TimeSpan x:Key="FadeInTimeSpan">0:0:0.0</system:TimeSpan>
    <Duration x:Key="FadeInTransitionsDuration">0:0:0.05</Duration>
    <system:TimeSpan x:Key="FadeOutTimeSpan">0:0:0.0</system:TimeSpan>
    <Duration x:Key="FadeOutTransitionsDuration">0:0:0.0</Duration>
    <Thickness x:Key="WindowMargin">10</Thickness>
    <system:Double x:Key="DropShadowRadius">10</system:Double>

    <LinearGradientBrush x:Key="WindowHeaderGradient" StartPoint="0, 0" EndPoint="0, 1" Opacity=".1">
        <GradientStop Offset="0" Color="{DynamicResource AccentColor}" />
        <GradientStop Offset="1" Color="Transparent" />
    </LinearGradientBrush>

    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"/>
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="8,5,2,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root" Background="Transparent">
                        <ContentPresenter x:Name="ButtonContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyPopupWindowStyle" TargetType="{x:Type local:NativePopupWindow}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundBrush}"/>
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MinHeight" Value="100" />
        <Setter Property="Width" Value="450" />
        <Setter Property="Height" Value="350" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NativePopupWindow}">
                    <Grid x:Name="RootElement" Margin="{StaticResource WindowMargin}" Visibility="Hidden" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayStates">
                                <VisualState x:Name="Show">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RootElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimation BeginTime="0" Duration="{StaticResource FadeInTransitionsDuration}" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="WindowBorder"/>
                                        <DoubleAnimation BeginTime="{StaticResource FadeInTimeSpan}" Duration="{StaticResource FadeInTransitionsDuration}" To="1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="WindowBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hide">
                                    <Storyboard>
                                        <DoubleAnimation Duration="{StaticResource FadeOutTransitionsDuration}" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="WindowBorder"/>
                                        <DoubleAnimation Duration="{StaticResource FadeOutTransitionsDuration}" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="WindowBorder" />

                                        <ObjectAnimationUsingKeyFrames BeginTime="{StaticResource FadeOutTimeSpan}" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RootElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Hidden</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="WindowBorder" Background="{TemplateBinding Background}" Opacity="0">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="{StaticResource DropShadowRadius}" Direction="0" ShadowDepth="0" Color="#CFCFCF" Opacity="0" />
                            </Border.Effect>

                            <Border.Resources>
                                <Storyboard x:Key="BackgroundAnimation">
                                    <ColorAnimation Storyboard.TargetName="WindowBorderBackground" Storyboard.TargetProperty="Color" To="{DynamicResource WindowBackgroundColor}" Duration="0:0:.6" />
                                </Storyboard>
                            </Border.Resources>

                            <Grid>
                                <Border BorderBrush="{DynamicResource WindowBorder}" BorderThickness="1" >
                                    <AdornerDecorator>
                                        <Grid x:Name="LayoutRoot">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="35" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <ContentControl Grid.Row="0" Grid.RowSpan="5" Content="{DynamicResource PopupWindowBackgroundContent}" />

                                            <ContentPresenter Grid.Row="3" Grid.ColumnSpan="2" Margin="0,5,0,0" />

                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <Border Grid.Column="0" BorderThickness="0" Background="Transparent" x:Name="CaptionBorder" />

                                                <TextBlock Grid.Column="0" Margin="10,2,2,2" VerticalAlignment="Center" IsHitTestVisible="False" FontSize="11">
                                                    <Run Foreground="#A2ACB8" Text="{TemplateBinding Title, Converter={StaticResource ToUppercaseConverter}}" />
                                                </TextBlock>

                                                <Grid Column="1" HorizontalAlignment="Right" Margin="0" WindowChrome.IsHitTestVisibleInChrome="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>

                                                    <local:CaptionButton Grid.Column="0" Width="42" ButtonType="Minimize" x:Name="Minimize" Visibility="Visible" />
                                                    <local:CaptionButton Grid.Column="1" Width="42" ButtonType="Restore"  x:Name="Restore"  Visibility="Collapsed" />
                                                    <local:CaptionButton Grid.Column="1" Width="42" ButtonType="Maximize" x:Name="Maximize" Visibility="Visible" />
                                                    <local:CaptionButton Grid.Column="2" Width="42" ButtonType="Close"    x:Name="Close" />
                                                </Grid>
                                            </Grid>

                                            <ResizeGrip Grid.Row="3" x:Name="WindowResizeGrip" Cursor="SizeNWSE" Margin="2,5,2,2" Visibility="Collapsed" IsTabStop="False" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                                        </Grid>
                                    </AdornerDecorator>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RootElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimation BeginTime="0" Duration="{StaticResource FadeInTransitionsDuration}" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="WindowBorder"/>
                                        <DoubleAnimation BeginTime="{StaticResource FadeInTimeSpan}" Duration="{StaticResource FadeInTransitionsDuration}" To="1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="WindowBorder" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="RootElement" Property="Margin" Value="5,5,5,10" />
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="RootElement" Property="Margin" Value="{StaticResource WindowMargin}" />
                            <!--<Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
    